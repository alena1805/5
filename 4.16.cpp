#include <iostream>    // Для ввода-вывода
#include <fstream>     // Для работы с файлами
#include <cstdlib>     // Для функций rand() и srand()
#include <ctime>       // Для функции time()
#include <limits>      // Для std::numeric_limits

// Генерация случайных чисел и запись их в файл
void gR(const std::string &f, int c, int m, int M) {
    std::ofstream file(f); // Открываем файл для записи
    if (!file) { // Проверка успешности открытия файла
        std::cerr << "Ошибка открытия файла!" << std::endl; // Вывод сообщения об ошибке
        return; // Завершаем функцию, если файл не открылся
    }
    // Генерация c случайных чисел в диапазоне от m до M
    for (int i = 0; i < c; ++i)
        file << m + rand() % (M - m + 1) << std::endl; // Записываем случайное число в файл
}

// Уменьшение чисел в файле на k
void rN(const std::string &in, const std::string &out, int k) {
    std::ifstream fin(in);   // Открываем входной файл для чтения
    std::ofstream fout(out); // Открываем выходной файл для записи
    if (!fin || !fout) { // Проверка успешности открытия файлов
        std::cerr << "Ошибка открытия файла!" << std::endl; // Вывод сообщения об ошибке
        return; // Завершаем функцию, если файлы не открылись
    }
    int n;
    // Читаем числа из входного файла и записываем уменьшенные значения в выходной файл
    while (fin >> n) 
        fout << n / k << std::endl; // Делим число на k и записываем результат
}

int main() {
    const std::string in = "input.txt", out = "output.txt"; // Имена входного и выходного файлов
    const int c = 100, m = 1, M = 1000; // Количество чисел и диапазон случайных чисел

    // Ввод коэффициента k с проверкой на корректность
    int k;
    while (true) {
        std::cout << "Введите k: "; // Запрашиваем ввод у пользователя
        std::cin >> k; // Считываем значение k
        if (std::cin.fail() || k <= 0) { // Проверка на ошибки ввода и положительность k
            std::cin.clear(); // Очищаем состояние потока ввода
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Игнорируем некорректный ввод
            std::cout << "Ошибка! Введите положительное число." << std::endl; // Сообщение об ошибке
        } else {
            break; // Выходим из цикла, если ввод корректен
        }
    }

    srand(time(0));  // Инициализация генератора случайных чисел с использованием текущего времени
    gR(in, c, m, M);  // Генерация случайных чисел и запись их в файл
    rN(in, out, k);   // Обработка чисел: уменьшение каждого числа в файле на k

    std::cout << "Готово!" << std::endl; // Сообщение о завершении работы программы
    return 0; // Завершение программы
}
